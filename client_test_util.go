// Copyright 2020 StrongDM Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// +build test

// This file was generated by protogen. DO NOT EDIT.

package sdm

import (
	"context"

	plumbing "github.com/strongdm/strongdm-sdk-go/internal/v1"
	"google.golang.org/grpc/metadata"
)

func (c *Client) SetTestOption(key string, value interface{}) {
	c.testOptionsMu.Lock()
	defer c.testOptionsMu.Unlock()
	c.testOptions[key] = value
}

func (c *Client) HostileRoleCreate(org, user, role string) error {
	// This is a hostile implementation for testing purposes
	req := &plumbing.RoleCreateRequest{
		Role: &plumbing.Role{Name: "test-role"},
	}
	ctx := metadata.NewOutgoingContext(context.Background(),
		metadata.New(map[string]string{
			"x-sdm-org":  org,
			"x-sdm-user": user,
			"x-sdm-role": role,
		}),
	)
	if _, err := c.roles.client.Create(ctx, req); err != nil {
		return convertErrorToPorcelain(err)
	}
	return nil
}

func (c *Client) DisableRetries() {
	c.maxRetries = 0
}
